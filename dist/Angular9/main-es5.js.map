{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/c-admin/c-admin.component.ts","webpack:///src/app/c-admin/c-admin.component.html","webpack:///src/app/c-admin/components/adnhome/adnhome.component.ts","webpack:///src/app/c-admin/components/adnhome/adnhome.component.html","webpack:///src/app/c-admin/components/users/users.component.ts","webpack:///src/app/c-admin/components/users/users.component.html","webpack:///src/app/c-user/c-user.component.ts","webpack:///src/app/c-user/c-user.component.html","webpack:///src/app/c-user/components/footer/footer.component.ts","webpack:///src/app/c-user/components/footer/footer.component.html","webpack:///src/app/c-user/components/home/home.component.ts","webpack:///src/app/c-user/components/home/home.component.html","webpack:///src/app/c-user/components/login/login.component.ts","webpack:///src/app/c-user/components/login/login.component.html","webpack:///src/app/c-user/components/navbar/navbar.component.ts","webpack:///src/app/c-user/components/navbar/navbar.component.html","webpack:///src/app/c-user/components/pagenotfound/pagenotfound.component.ts","webpack:///src/app/c-user/components/pagenotfound/pagenotfound.component.html","webpack:///src/app/c-user/components/profile/profile.component.ts","webpack:///src/app/c-user/components/profile/profile.component.html","webpack:///src/app/c-user/components/signup/signup.component.ts","webpack:///src/app/c-user/components/signup/signup.component.html","webpack:///src/app/components/post/post.component.ts","webpack:///src/app/components/post/post.component.html","webpack:///src/app/shared/post.service.ts","webpack:///src/app/shared/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","userService","router","dialog","dialogRef","open","afterClosed","subscribe","next","state","isLoggedIn","openDialoglogin","deleteToken","providedIn","AuthInterceptor","headers","get","handle","clone","clonedreq","set","getToken","pipe","event","err","error","auth","CAdminComponent","name","bn","AdnhomeComponent","UsersComponent","fetchUsers","getUsers","data","user","console","log","CUserComponent","FooterComponent","HomeComponent","postService","getPosts","res","posts","alert","LoginComponent","model","email","password","emailRegex","close","form","login","value","setToken","navigateByUrl","islog","serverErrorMessages","message","onSubmit","NavbarComponent","getuser","ngOnInit","window","listener","addEventListener","getUserProfile","fullName","toUpperCase","split","PagenotfoundComponent","ProfileComponent","profile","getprofile","SignupComponent","showSucessMessage","resetSelectedUser","postUser","setTimeout","resetForm","status","join","selectedUser","PostComponent","topic","postbody","addPost","JSON","stringify","createPost","PostService","http","apiBaseUrl","post","UserService","authCredentials","token","localStorage","setItem","getItem","removeItem","userPayload","atob","parse","getUserPayload","exp","Date","now","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// import { AuthGuard } from './auth/auth.guard';\n\nimport { CAdminComponent } from './c-admin/c-admin.component';\nimport { CUserComponent } from './c-user/c-user.component';\nimport { HomeComponent } from './c-user/components/home/home.component';\nimport { PagenotfoundComponent } from './c-user/components/pagenotfound/pagenotfound.component';\nimport { ProfileComponent } from './c-user/components/profile/profile.component';\n\nimport { AdnhomeComponent } from './c-admin/components/adnhome/adnhome.component';\nimport { UsersComponent } from './c-admin/components/users/users.component';\n\nimport { PostComponent } from './components/post/post.component';\n\nconst routes: Routes = [\n  {\n    path: \"admincp\", component: CAdminComponent,\n    children: [\n      { path: \"\", redirectTo: \"adminhome\", pathMatch: \"full\" },\n      { path: 'adminhome', component: AdnhomeComponent },\n      { path: 'userlist', component: UsersComponent },\n      { path: '**', component: PagenotfoundComponent }\n\n    ]\n  },\n\n  {\n    path: \"\", redirectTo: \"home\", pathMatch: \"full\"\n  },\n\n  {\n    path: 'home', component: CUserComponent,\n    children: [\n      { path: \"\", redirectTo: \"userhome\", pathMatch: \"full\" },\n      { path: 'userhome', component: HomeComponent },\n      { path: 'addpost', component: PostComponent },\n      { path: 'profile', component: ProfileComponent },\n      { path: '**', component: PagenotfoundComponent }\n\n    ]\n  },\n  {\n    path: '**', component: CUserComponent,\n    children: [\n      { path: '**', component: PagenotfoundComponent }\n\n    ]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular9';\n}\n","\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { UserService } from './shared/user.service';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthInterceptor } from './auth/auth.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './c-user/components/home/home.component';\nimport { LoginComponent } from './c-user/components/login/login.component';\nimport { NavbarComponent } from './c-user/components/navbar/navbar.component';\nimport { SignupComponent } from './c-user/components/signup/signup.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CAdminComponent } from './c-admin/c-admin.component';\nimport { CUserComponent } from './c-user/c-user.component';\nimport { FooterComponent } from './c-user/components/footer/footer.component';\nimport { PagenotfoundComponent } from './c-user/components/pagenotfound/pagenotfound.component';\nimport { AdnhomeComponent } from './c-admin/components/adnhome/adnhome.component';\nimport { UsersComponent } from './c-admin/components/users/users.component';\nimport { PostComponent } from './components/post/post.component';\nimport { ProfileComponent } from './c-user/components/profile/profile.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    NavbarComponent,\n    SignupComponent,\n    CAdminComponent,\n    CUserComponent,\n    FooterComponent,\n    PagenotfoundComponent,\n    AdnhomeComponent,\n    UsersComponent,\n    PostComponent,\n    ProfileComponent,\n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule, \n    HttpClientModule,\n\n    BrowserAnimationsModule,\n    MatDialogModule\n  ],\n\n\n\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    AuthGuard,\n    UserService\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from \"../shared/user.service\";\nimport { Router } from \"@angular/router\";\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from '../c-user/components/login/login.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private userService : UserService,private router : Router,public dialog: MatDialog){}\n\n  openDialoglogin(): void {\n    let dialogRef = this.dialog.open(LoginComponent);\n    dialogRef.afterClosed().subscribe(() => {\n    })\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (!this.userService.isLoggedIn()) {\n        // this.router.navigateByUrl('/login');\n        this.openDialoglogin()\n        this.userService.deleteToken();\n      \n        return false;\n      }\n    return true;\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { UserService } from \"../shared/user.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../c-user/components/login/login.component';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private userService : UserService,private router : Router,public dialog: MatDialog){}\r\n\r\n    openDialoglogin(): void {\r\n        let dialogRef = this.dialog.open(LoginComponent);\r\n        dialogRef.afterClosed().subscribe(() => {\r\n        })\r\n      }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n        if (req.headers.get('noauth'))\r\n            return next.handle(req.clone());\r\n        else {\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + this.userService.getToken())\r\n            });\r\n            return next.handle(clonedreq).pipe(\r\n                tap(\r\n                    event => { },\r\n                    err => {\r\n                        if (err.error.auth == false) {\r\n                            // this.router.navigateByUrl('/login');\r\n                            this.openDialoglogin()\r\n                        }\r\n                    })\r\n            );\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-c-admin',\n  templateUrl: './c-admin.component.html',\n  styleUrls: ['./c-admin.component.css']\n})\nexport class CAdminComponent implements OnInit {\n  name=\"SAMEERA PRABHATH\"\n  bn=\"S\"\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link x\" routerLink=\"/admincp/adminhome\" routerLinkActive=\"active1\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link x\" routerLink=\"/admincp/userlist\" routerLinkActive=\"active1\">users</a>\n        </li>\n\n      </ul>\n  \n      <div class=\"dropdown form-inline my-2 my-lg-0\">\n        <p  class=\"namePara\">A D M I N&nbsp;</p>\n        <button  style=\"border-radius:50%\" class=\"btn btn-outline-success my-2 my-sm-0\"\n        data-toggle=\"dropdown\" id=\"dropdownMenuButton\" aria-haspopup=\"true\" aria-expanded=\"false\"\n        type=\"button\"><i class=\"fas fa-user-cog\"></i></button>\n  \n        <div  class=\"dropD dropdown-menu dropdown-menu-right\"\n          aria-labelledby=\"dropdownMenuButton\">\n          <a class=\"dropdown-item DropdounHover\" routerLink=\"/ProfileComponent\" href=\"#\">Profile</a>\n          <a class=\"dropdown-item DropdounHover\" href=\"#\">Settings</a>\n          <div class=\"dropdown-divider\"></div>\n          <button  class=\"dropdown-item DropdounHover\"><i\n              class=\"fas fa-sign-out-alt\"></i>&nbsp;LogOut</button>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <router-outlet></router-outlet>\n\n\n<button    type=\"button\" routerLink=\"/home\" class=\"btn btn-success\">user home --></button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-adnhome',\n  templateUrl: './adnhome.component.html',\n  styleUrls: ['./adnhome.component.css']\n})\nexport class AdnhomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>adnhome works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../shared/user.service';\nimport { User } from '../../../shared/user.model';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  user:User[]; \n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.fetchUsers()\n  }\n\n\n\n  fetchUsers(){\n    this.userService.getUsers().subscribe((data:User[])=>{\n      this.user=data;\n      console.log('Data requested...');\n      console.log(this.user);\n    });\n  }\n\n\n\n}\n","<div class=\"mainDiv\">\n    <div class=\"btn-h1\"> <h1>Users List</h1>\n <!-- <button type=\"button\" (click)=\"openDialog()\"  class=\"btn btn-secondary btnPlace btn-sm\"><i class=\"fas fa-user-plus\"></i>&nbsp;&nbsp;Add New Editor</button> -->\n </div>   \n \n <table class=\"table tableWidth table-hover\" >\n    <thead> \n     <tr>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Action</th>\n        <th scope=\"col\">Action</th>\n     </tr>\n     </thead >\n <tr *ngFor=\"let u of user\">\n      \n    <td  >\n     {{u.fullName}}\n    </td>\n \n    <td >\n     {{u.email}}\n    </td>\n      \n \n      \n      <td > \n           <button type=\"button\" class=\"btnB btn btn-sm btn-outline-dark\"  ><i class=\"fas fa-pencil-alt\"></i>&nbsp;view</button>\n        </td>   \n        <td> <button type=\"button\" class=\"btnB del-btn btn btn-sm btn-outline-danger\" ><i class=\"fas fa-trash-alt\"></i>&nbsp;delete</button>\n      </td>\n \n \n </tr>\n </table>\n \n </div>\n <br>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-c-user',\n  templateUrl: './c-user.component.html',\n  styleUrls: ['./c-user.component.css']\n})\nexport class CUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\n\n\n<router-outlet></router-outlet>\n\n<hr>\n\n<app-footer></app-footer>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<!-- Footer -->\n<footer class=\"page-footer font-small mdb-color lighten-3 pt-4\">\n\n    <!-- Footer Links -->\n    <div class=\"container text-center text-md-left\">\n  \n      <!-- Grid row -->\n      <div class=\"row\">\n  \n        <!-- Grid column -->\n        <div class=\"col-md-4 col-lg-3 mr-auto my-md-4 my-0 mt-4 mb-1\">\n  \n          <!-- Content -->\n          <h5 class=\"font-weight-bold text-uppercase mb-4\">Footer Content</h5>\n          <p>Here you can use rows and columns to organize your footer content.</p>\n          \n  \n        </div>\n        <!-- Grid column -->\n  \n        <hr class=\"clearfix w-100 d-md-none\">\n  \n        <!-- Grid column -->\n        <div class=\"col-md-2 col-lg-2 mx-auto my-md-4 my-0 mt-4 mb-1\">\n  \n          <!-- Links -->\n          <h5 class=\"font-weight-bold text-uppercase mb-4\">About</h5>\n  \n          <ul class=\"list-unstyled\">\n            <li>\n              <p>\n                <a href=\"#!\">PROJECTS</a>\n              </p>\n            </li>\n            <li>\n              <p>\n                <a href=\"#!\">ABOUT US</a>\n              </p>\n            </li>\n            <li>\n              <p>\n                <a href=\"#!\">BLOG</a>\n              </p>\n            </li>\n            <li>\n              <p>\n                <a href=\"#!\">AWARDS</a>\n              </p>\n            </li>\n          </ul>\n  \n        </div>\n        <!-- Grid column -->\n  \n        <hr class=\"clearfix w-100 d-md-none\">\n  \n        <!-- Grid column -->\n        <div class=\"col-md-4 col-lg-3 mx-auto my-md-4 my-0 mt-4 mb-1\">\n  \n          <!-- Contact details -->\n          <h5 class=\"font-weight-bold text-uppercase mb-4\">Address</h5>\n  \n          <ul class=\"list-unstyled\">\n            <li>\n              <p>\n                <i class=\"fas fa-home mr-3\"></i> Kandy, NY 10012, US</p>\n            </li>\n            <li>\n              <p>\n                <i class=\"fas fa-envelope mr-3\"></i> info@example.com</p>\n            </li>\n            <li>\n              <p>\n                <i class=\"fas fa-phone mr-3\"></i> + 01 234 567 88</p>\n            </li>\n            <li>\n              <p>\n                <i class=\"fas fa-print mr-3\"></i> + 01 234 567 89</p>\n            </li>\n          </ul>\n  \n        </div>\n        <!-- Grid column -->\n  \n        <hr class=\"clearfix w-100 d-md-none\">\n  \n        <!-- Grid column -->\n        <div class=\"col-md-2 col-lg-2 text-center mx-auto my-4\">\n  \n          <!-- Social buttons -->\n          <h5 class=\"font-weight-bold text-uppercase mb-4\">Follow Us</h5>\n          <ul class=\"list-unstyled\">\n  \n          <!-- Facebook -->\n          \n          <li><p><a href=\"#\"><i class=\"fab fa-facebook fa-2x\"></i></a></p></li> \n         \n          <!-- Twitter -->\n            <li><p><a href=\"#\"> <i class=\"fab fa-twitter fa-2x\"></i> </a>  </p></li> \n               <!-- Google +-->\n               <li><p><a href=\"#\"> <i class=\"fab fa-google-plus fa-2x\"></i>  </a> </p></li> \n               <!-- Dribbble -->\n               <li><p><a href=\"#\"> <i class=\"fab fa-linkedin fa-2x\"></i>  </a> </p></li> \n              </ul>\n  \n        </div>\n        <!-- Grid column -->\n  \n      </div>\n      <!-- Grid row -->\n  \n    </div>\n    <!-- Footer Links -->\n  \n    <!-- Copyright -->\n    <div class=\"size footer-copyright text-center py-3\">© 2018 Copyright:\n      <a href=\"#\"> sameera.com</a>\n    </div>\n  \n    <!-- Copyright -->\n  \n  </footer>\n  <!-- Footer -->\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../../shared/post.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  posts: any[];\n  constructor(private postService: PostService) { }\n\n  ngOnInit(): void {\n    this.postService.getPosts().subscribe(\n      (res: any[]) => {\n\n\n        this.posts = res;\n\n      },\n      err => {\n        alert(\"err\" + err)\n      }\n\n    )\n  }\n\n}\n","<!-- Header -->\n<header class=\"bg-primary py-5 mb-5  bk \">\n\n  <div class=\"container h-100\">\n    <div class=\"row h-100 align-items-center\">\n      <div class=\"col-lg-12\">\n        <h1 class=\"display-4 text-white mt-5 mb-2\">SAMPLE NAME</h1>\n        <p class=\"lead mb-5 text-white-50\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Non possimus ab\n          labore provident mollitia. Id assumenda voluptate earum corporis facere quibusdam quisquam iste ipsa cumque\n          unde nisi, totam quas ipsam.</p>\n      </div>\n    </div>\n  </div>\n</header>\n\n\n<!-- Page Content -->\n<div class=\"container\">\n\n  <div class=\"row\">\n\n    <div class=\"col-md-9 mb-5\">\n      <h2>Posts</h2>\n      <hr>\n      <div *ngFor=\"let p of posts\">\n        <div class=\"card\" style=\"width: 100%;\">\n          <div class=\"card-body\">\n            <h3 class=\"card-title\">{{p.topic}}</h3>\n            <h6 class=\"card-subtitle mb-2 text-muted\">By {{p.ownerid}}</h6>\n            <p class=\"card-text\">{{p.postbody}}</p>\n            <a href=\"#\" class=\"card-link\">Read more</a>\n            <hr>\n            <p> <i class=\"fas fa-heart\"></i> 5k &nbsp; <i class=\"fas fa-heart-broken\"></i>100 &nbsp; <i\n                class=\"fas fa-comment-dots\"></i>1.2k </p>\n\n          </div>\n        </div>\n\n        <br>\n\n      </div>\n\n\n\n    </div>\n\n\n\n\n    <div class=\"col-md-3 mb-5\">\n      <h2>something</h2>\n      <hr>\n\n      <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search for...\">\n        <span class=\"input-group-btn\">\n          <button class=\"btn btn-light\" type=\"button\"><i class=\"fas fa-search\"></i></button>\n        </span>\n      </div>\n      <br><br><br>\n\n      <div class=\"card border-primary mb-3\" style=\"max-width: 18rem;\">\n        <div class=\"card-header\">Header</div>\n        <div class=\"card-body text-primary\">\n          <h5 class=\"card-title\">Primary card title</h5>\n          <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's\n            content.</p>\n        </div>\n\n\n\n\n      </div>\n\n\n\n\n      <!-- /.row -->\n\n\n    </div>\n    <!-- /.container -->","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\nimport { NgForm } from \"@angular/forms\";\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport { UserService } from '../../../shared/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserService,private router : Router,public dialogRef: MatDialogRef<LoginComponent>) { }\n\n  \n  model ={\n    email :'',\n    password:''\n  };\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  serverErrorMessages: string;\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(form : NgForm){\n    this.userService.login(form.value).subscribe(\n      res => {\n\n// /*next line is my new line*/ \n// this.userService.userMode(true);\n\n        this.userService.setToken(res['token']);\n        this.router.navigateByUrl('/home');\n        this.userService.islog = true  \n        this.dialogRef.close();\n         \n\n      },\n      err => {\n        this.serverErrorMessages = err.error.message;\n      }\n    );\n  }\n\n}\n","<div class=\" wsize\">\r\n  <div>\r\n\r\n    <h1>Login</h1>\r\n\r\n    <br><br>\r\n\r\n  </div>\r\n\r\n  <!-- Error message -->\r\n  <div class=\"alert alert-danger\" *ngIf=\"serverErrorMessages\">\r\n    {{serverErrorMessages}}\r\n  </div>\r\n\r\n  <form #signInForm=\"ngForm\" (ngSubmit)=\"signInForm.valid && onSubmit(signInForm)\">\r\n\r\n\r\n\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"formGroupExampleInput\">Email</label>\r\n      <input type=\"text\" class=\"form-control\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"model.email\"\r\n        placeholder=\"Email\" [pattern]=\"emailRegex\" required\r\n        [ngClass]=\"{'is-invalid' :signInForm.submitted && !email.valid }\">\r\n      <div class=\"invalid-feedback\" *ngIf=\"signInForm.submitted && email.errors?.pattern\">Invalid email address.</div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"formGroupExampleInput\">Password</label>\r\n      <input class=\"form-control\" type=\"password\" name=\"password\" #password=\"ngModel\" [(ngModel)]=\"model.password\"\r\n        placeholder=\"Password\" required minlength=\"4\"\r\n        [ngClass]=\"{'is-invalid' :signInForm.submitted && !password.valid }\">\r\n      <div class=\"invalid-feedback\" *ngIf=\"signInForm.submitted && password.errors?.minlength\">Minimum 4 characters.\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <input class=\"btn btn-primary mb-2\" type=\"submit\" value=\"Sign In\">\r\n\r\n\r\n    <br>\r\n    <br>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary  btn-sm\"><i class=\"fab fa-google\"></i> &nbsp; Signup With\r\n      Google </button>\r\n\r\n\r\n\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../shared/user.service';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SignupComponent } from '../signup/signup.component';\nimport { LoginComponent } from '../login/login.component';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  name = \"\"\n  bn = \"\"\n\n  // methana public krna eke aulak thiynawda danne naa, wenama service ekak haduwanm hri.. islog wage ewa danna\n  constructor(public userService: UserService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.userService.islog = this.userService.isLoggedIn();\n\n    this.getuser()\n  }\n\n\n\n  openDialog(): void {\n    let dialogRef = this.dialog.open(SignupComponent);\n    dialogRef.afterClosed().subscribe(() => {\n  \n    })\n  }\n\n\n  openDialoglogin(): void {\n    let dialogRef = this.dialog.open(LoginComponent);\n    dialogRef.afterClosed().subscribe(() => {\n      this.ngOnInit()\n    })\n  }\n\n  googlel() {\n\n    window.open('http://localhost:3000/api/googlelll', \"mywindow\", \"location=1,status=1,scrollbars=1, width=800,height=800\");\n    let listener = window.addEventListener('message', (message) => {\n      //message will contain facebook user and details\n    });\n\n\n\n    console.log(\"gooooogle l B\")\n    // this.userService.googlelogin().subscribe(\n    //  res=>{ console.log(\"ok \"+res)},  \n    //  err=>{console.log(\"errr\"+JSON.stringify(err))}\n    // )\n  }\n\n  getuser() {\n\n    if(this.userService.isLoggedIn())\n    this.userService.getUserProfile().subscribe(\n      (res: any) => {\n\n        this.name = res.user.fullName.toUpperCase();\n        this.bn = res.user.fullName.split('')[0].toUpperCase();\n\n\n      },\n      err => {\n        console.log(err)\n      }\n    );\n  }\n\n  logout() {\n    this.userService.deleteToken()\n    this.ngOnInit()\n  }\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link x\" routerLink=\"/home\" routerLinkActive=\"active1\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link x\" routerLink=\"/home/addpost\" routerLinkActive=\"active1\">Create Post</a>\n      </li>\n\n\n    </ul>\n\n    <div class=\"dropdown form-inline my-2 my-lg-0\">\n      <button *ngIf=\"!userService.islog\" type=\"button\" (click)=\"openDialoglogin()\"\n        class=\"btn btn-success  btn-sm \">Login</button> &nbsp; &nbsp;\n      <!-- <button  *ngIf=\"!userService.islog\"   type=\"button\" routerLink=\"/login\" class=\"btn btn-success\">Login</button> &nbsp; -->\n      <!-- <button  *ngIf=\"!userService.islog\"   type=\"button\"    routerLink=\"/signup\" class=\"btn btn-success\">Signup</button> -->\n      <button *ngIf=\"!userService.islog\" type=\"button\" (click)=\"openDialog()\" class=\"btn btn-success  btn-sm\">Signup</button>\n      <p *ngIf=\"userService.islog\" class=\"namePara\">{{name}}&nbsp;</p>\n      <button *ngIf=\"userService.islog\" style=\"border-radius:50%\" class=\"btn btn-outline-success my-2 my-sm-0\"\n        data-toggle=\"dropdown\" id=\"dropdownMenuButton\" aria-haspopup=\"true\" aria-expanded=\"false\"\n        type=\"button\">{{bn}}</button>\n\n      <div *ngIf=\"userService.islog\" class=\"dropD dropdown-menu dropdown-menu-right\"\n        aria-labelledby=\"dropdownMenuButton\">\n        <a class=\"dropdown-item DropdounHover\" routerLink=\"/home/profile\" href=\"#\">Profile</a>\n        <a class=\"dropdown-item DropdounHover\" href=\"#\">Settings</a>\n        <div class=\"dropdown-divider\"></div>\n        <button (click)=\"logout()\" class=\"dropdown-item DropdounHover\"><i\n            class=\"fas fa-sign-out-alt\"></i>&nbsp;LogOut</button>\n      </div>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Page Not Found</h1>\n<p class=\"zoom-area\">This Is Not The Page You Are Lookng For. </p>\n<section class=\"error-container\">\n  <span class=\"four\"><span class=\"screen-reader-text\">4</span></span>\n  <span class=\"zero\"><span class=\"screen-reader-text\">0</span></span>\n  <span class=\"four\"><span class=\"screen-reader-text\">4</span></span>\n</section>\n<div class=\"link-container\">\n    <button    type=\"button\" routerLink=\"/home\" class=\"btn btn-dark\">Go To Home</button>\n<br><br><br><br><br><br>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../shared/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\nprofile:any={}\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n\nthis.getprofile()\n\n  }\n\n\n  getprofile(){\n\nthis.userService.getUserProfile().subscribe(\n  (res:any)=>{\n    this.profile= res.user;\n\n\n  },\n  err=>{\nconsole.log(err)\n\n  }\n)\n\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12 col-sm-12 col-xs-12 image-section\">\n          \n        </div>\n        <div class=\"row user-left-part\">\n            <div class=\"col-md-3 col-sm-3 col-xs-12 user-profil-part pull-left\">\n                <div class=\"row \">\n                    <div class=\"col-md-12 col-md-12-sm-12 col-xs-12 user-image text-center\">\n                        <img src=\"https://cdn2.iconfinder.com/data/icons/user-icon-2-1/100/user_5-15-512.png\" class=\"rounded-circle\">\n                    </div>\n                    <div class=\"col-md-12 col-sm-12 col-xs-12 user-detail-section1 text-center\">\n                        <button id=\"btn-contact\"  data-toggle=\"modal\" data-target=\"#contact\" class=\"btn btn-success btn-block follow\">Edit Profile</button> \n                                                  \n                    </div>\n                    <div class=\"row user-detail-row\">\n                        <div class=\"col-md-12 col-sm-12 user-detail-section2 pull-left\">\n                     \n  \n                        </div>                           \n                    </div>\n                   \n                </div>\n            </div>\n            <div class=\"col-md-9 col-sm-9 col-xs-12 pull-right profile-right-section\">\n                <div class=\"row profile-right-section-row\">\n                    <div class=\"col-md-12 profile-header\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8 col-sm-6 col-xs-6 profile-header-section1 pull-left\">\n                                <h1>{{profile.fullName}}</h1>\n                                <h5>User type</h5>\n                            </div>\n                            <div class=\"col-md-4 col-sm-6 col-xs-6 profile-header-section1 text-right pull-rigth\">\n                               \n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n  \n                                          <!-- Tab panes -->\n                                          <div class=\"tab-content\">\n                                            <div role=\"tabpanel\" class=\"tab-pane fade show active\" id=\"profile\">\n  \n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-2\">\n                                                                <label>Full Name</label>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <p>{{profile.fullName}}</p>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-2\">\n                                                                <label>Email</label>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <p>{{profile.email}}</p>\n                                                            </div>\n                                                        </div>\n  \n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-2\">\n                                                                <label>User Type</label>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <p>type</p>\n                                                            </div>\n                                                        </div>\n                                            </div>\n                                          \n                                          \n                                          \n                                        \n  \n  \n  \n  \n                                          </div>\n                      \n                            </div>\n                            <div class=\"col-md-4 img-main-rightPart\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <div class=\"row image-right-part\">\n                                            <div class=\"col-md-6 pull-left image-right-detail\">\n                                              \n                                            </div>\n                                        </div>\n                                    </div>\n                                    <a href=\"http://camaradecomerciozn.com/\">\n                                        <div class=\"col-md-12 image-right\">\n                                          \n                                        </div>\n                                    </a>\n                                    <div class=\"col-md-12 image-right-detail-section2\">\n  \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  <!-- wadagATH NA -->\n  <div class=\"modal fade\" id=\"contact\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"contact\">Edit Profile</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">×</span>\n                </button>\n            </div>\n            <form #signUpForm=\"ngForm\" >\n  \n\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary\" >Ok</button>\n            </div>\n          </form>\n        </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../../../shared/user.service'\n\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  showSucessMessage: boolean = false\n  serverErrorMessages: string;\n  confirmPassword: string;\n\n\n  constructor(public userService: UserService,public dialogRef: MatDialogRef<SignupComponent>) { }\n\n \n\n  ngOnInit(): void {\n    this.resetSelectedUser();\n \n  }\n \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  \n  onSubmit(form: NgForm) {\n\n    this.userService.postUser(form.value).subscribe(  \n      res => {\n        this.showSucessMessage = true;\n        setTimeout(() => this.showSucessMessage = false, 3000);\n        this.resetForm(form);\n        setTimeout(() => this.dialogRef.close() , 3000);\n        \n    \n      },\n      err => {\n        if (err.status === 422) {\n          this.serverErrorMessages = err.error.join('<br/>');\n        }\n        else\n          this.serverErrorMessages = 'Something went wrong.';\n      }\n    );\n  \n}\n\n\nresetSelectedUser(){\n  this.userService.selectedUser = {\n    fullName: '',\n    email: '',\n    password: ''\n  };\n }\n\n\n  resetForm(form: NgForm) {\n    this.userService.selectedUser = {\n      fullName: '',\n      email: '',\n      password: ''\n    };\n    form.resetForm();\n    this.serverErrorMessages = '';\n  }\n\n\n\n}\n","<div  class=\"wsize\" >\n    <div>\n     \n      <h1 *ngIf=\"!showSucessMessage\" >Signup</h1>\n    \n      <br><br>\n    \n    </div>\n    <!-- Success message -->\n    <div  style=\"text-align: center;\" class=\"alert alert-success\" *ngIf=\"showSucessMessage\">\n    successfully\n    </div>\n\n    \n    <!-- Error message -->\n    <div class=\"alert alert-danger\" *ngIf=\"serverErrorMessages\">\n      {{serverErrorMessages}}\n    </div>\n    \n    <div  style=\"text-align: center;\"  *ngIf=\"showSucessMessage\">\n      <br><br><br>\n     <h2 class=\"text-secondary\" > Hi There &nbsp; <i class=\"far fa-grin-beam\"></i></h2>\n     <h3 class=\"text-secondary\" >Welcome to the our site</h3>\n     <br><br><br> \n    </div>\n\n    <form *ngIf=\"!showSucessMessage\" #signUpForm=\"ngForm\" (ngSubmit)=\"signUpForm.valid && onSubmit(signUpForm)\">\n\n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput\">Full Name</label>\n      <input  class=\"form-control\" type=\"text\" #fullName=\"ngModel\" [(ngModel)]=\"userService.selectedUser.fullName\" name=\"fullName\" placeholder=\"Full Name\"\n      required  [ngClass]=\"{'is-invalid' :signUpForm.submitted && !fullName.valid }\">\n      <div class=\"invalidtext text-danger\" *ngIf=\"signUpForm.submitted && !fullName.valid\"> This field is required.  </div>\n    </div>\n    \n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput\">Email</label>\n      <input  class=\"form-control\" type=\"text\" #email=\"ngModel\" [(ngModel)]=\"userService.selectedUser.email\" name=\"email\" placeholder=\"Email\"\n      required [pattern]=\"emailRegex\"  [ngClass]=\"{'is-invalid' :signUpForm.submitted && !email.valid }\">\n  <div  *ngIf=\"signUpForm.submitted && email.errors\" >  \n   <div class=\"invalidtext text-danger\" *ngIf=\"signUpForm.submitted && email.errors.required\"> This field is required.</div>\n      <div class=\"invalidtext text-danger\" *ngIf=\"signUpForm.submitted && email.errors.pattern\">Invalid email address. </div>\n    </div>  </div>\n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput\">Password</label>\n      <input  class=\"form-control\" type=\"password\" #password=\"ngModel\" [(ngModel)]=\"userService.selectedUser.password\" name=\"password\" placeholder=\"Password\"\n      minlength=\"4\" required [ngClass]=\"{'is-invalid' :signUpForm.submitted && !password.valid }\">\n      <div *ngIf=\"signUpForm.submitted && password.errors\"      >     <div class=\"invalidtext text-danger\" *ngIf=\"signUpForm.submitted && password.errors.required\">   This field is required.</div>\n      <div class=\"invalidtext text-danger\" *ngIf=\"signUpForm.submitted && password.errors.minlength\">  Enter atleast 4 characters.</div>\n    </div></div>\n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput\">Confirm Password </label>\n      <input  class=\"form-control\" type=\"password\"  pattern=\"{{ password.value }}\" #cPassword=\"ngModel\" [(ngModel)]=\"confirmPassword\"  name=\"confirmPassword\" placeholder=\"Confirm Password\"\n      required [ngClass]=\"{'is-invalid' : signUpForm.submitted && !cPassword.valid }\" >\n      <div   *ngIf=\"signUpForm.submitted  && cPassword.errors\"    >  <div class=\"invalidtext text-danger\" *ngIf=\"signUpForm.submitted  &&  cPassword.errors.required \">  This field is required. </div>\n     <div class=\"invalidtext text-danger\" *ngIf=\"signUpForm.submitted  && cPassword.errors.pattern \">  confirm password dose not match  </div>\n    </div>\n  </div>\n    \n    \n      <input class=\"btn btn-primary mb-2\" type=\"submit\" value=\"Signup\">\n<br>\n<br>\n      <button type=\"button\" class=\"btn btn-outline-secondary  btn-sm\" ><i class=\"fab fa-google\"></i> &nbsp; Signup With Google </button>\n    \n\n    </form>\n    </div> ","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../shared/post.service';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  model ={\n    topic :'',\n    postbody:''\n  };\n\n\n  constructor(private postService: PostService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  createPost(){\nthis.postService.addPost(this.model).subscribe(\n  res=>{\n    alert(\"Done\")\n  },\n  err=>{\n    console.log(\"err\"+  JSON.stringify( err))\n  }\n)\n\n  }\n\n\n}\n","<div style=\"width: 60%;margin: auto;\" >\n    <div>\n    \n        <br>\n      <h1>Create Post</h1>\n  \n      <br><br>\n  \n    </div>\n  \n    <!-- Error message -->\n    <!-- <div class=\"alert alert-danger\" *ngIf=\"serverErrorMessages\">\n      {{serverErrorMessages}}\n    </div> -->\n  \n    <form >\n  \n  \n  \n  \n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput\">Topic</label>\n        <input type=\"text\" class=\"form-control\" name=\"Topic\" #topic=\"ngModel\" [(ngModel)]=\"model.topic\"\n           placeholder=\"Topic\"  required\n         >\n        <div class=\"invalid-feedback\" *ngIf=\"\">Cannot Empty</div>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput\">Body</label>\n \n        <textarea class=\"form-control\" name=\"postbody\"   #postbody=\"ngModel\" [(ngModel)]=\"model.postbody\"    placeholder=\"Type your post\" required  id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n        <div class=\"invalid-feedback\" *ngIf=\"\">Cannot Empty\n        </div>\n      </div>\n\n  \n      <input class=\"btn btn-primary mb-2\"  (click)=\"createPost()\"  type=\"submit\" value=\"Create\">\n  \n\n\n  \n  \n    </form>\n  </div>","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getPosts() {\n    return this.http.get(environment.apiBaseUrl + '/posts');\n  }\n\n  getAPost(id) {\n    return this.http.get(environment.apiBaseUrl + `/post/${id}`);\n  }\n\n\n  deletePost(id) {\n    return this.http.delete(environment.apiBaseUrl + `/post/delete/${id}`);\n  }\n\n  addPost(post) {\n    return this.http.post(environment.apiBaseUrl + '/addpost', post);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment';\nimport { User } from './user.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  selectedUser: User = {\n    fullName: '',\n    email: '',\n    password: ''\n  };\n\n\n  islog:boolean=false;\n\n\n  getUsers(){\n    return this.http.get(environment.apiBaseUrl + '/userlist');\n  }\n\n  getanuser(id){\n    return this.http.get(environment.apiBaseUrl + `/user/${id}`);\n  }\n  \n\n deleteuser(id){\n    return this.http.delete(environment.apiBaseUrl + `/user/delete/${id}`);\n  }\n\n    postUser(user: User){\n    return this.http.post(environment.apiBaseUrl+'/register',user);\n    }\n\n    login(authCredentials) {\n      return this.http.post(environment.apiBaseUrl + '/signin', authCredentials);\n    }\n\n    getUserProfile() {\n      return this.http.get(environment.apiBaseUrl + '/userProfile');\n    }   \n\n\n    googlelogin(){\n      return this.http.get(environment.apiBaseUrl + '/googlelll');\n    }\n\n\n    setToken(token: string) {\n      localStorage.setItem('token', token);\n    }\n  \n    getToken() {\n      return localStorage.getItem('token');\n    }\n  \n    deleteToken() {\n      localStorage.removeItem('token');\n    }\n  \n\n\n\n    getUserPayload() {\n      var token = this.getToken();\n      if (token) {\n        var userPayload = atob(token.split('.')[1]);\n        return JSON.parse(userPayload);\n      }\n      else\n        return null;\n    }\n  \n    isLoggedIn() {\n      var userPayload = this.getUserPayload();\n      if (userPayload)\n        return userPayload.exp > Date.now() / 1000;\n      else\n        return false;\n    }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\n  production: false,\n  apiBaseUrl: '/api' ,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}